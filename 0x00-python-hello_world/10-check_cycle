#include "lists.h"

/**
 * check_cycle - Checks if a singly linked list has a cycle in it.
 *
 * Return: 0 if there is no cycle, 1 if there is a cycle
 */
int check_cycle(listint_t *list)
{
	listint_t *one_step, *two_steps;

	if (list == NULL || list->next == NULL)
		return (0);

	one_step = list;
	two_steps = list->next;

	while (two_steps && two_steps->next)
	{
		one_step = one_step->next;
		two_steps = two_steps->next->next;

		if (one_step == two_steps)
		{
			one_step = list;

			while (one_step != two_steps)
			{
				one_step = one_step->next;
				two_steps = two_steps->next;
			}

			return (1);
		}
	}

	return (0);
}

