# Test cases for lazy_matrix_mul function
========================================

# Import `lazy_matrix_mul` from the appropriate module:
>>> lazy_matrix_mul = __import__("101-lazy_matrix_mul").lazy_matrix_mul

# Test 1: Multiplying two valid matrices
>>> m_a = [[1, 2], [3, 4]]
>>> m_b = [[5, 6], [7, 8]]
>>> lazy_matrix_mul(m_a, m_b)
array([[19, 22],
       [43, 50]])

# Test 2: Multiplying matrices with an empty matrix (should raise ValueError)
>>> m_a = []
>>> m_b = [[1, 2], [3, 4]]
>>> lazy_matrix_mul(m_a, m_b)
Traceback (most recent call last):
    ...
ValueError: m_a and m_b can't be multiplied

# Test 3: Multiplying non-rectangle matrices (should raise TypeError)
>>> m_a = [[1, 2], [3, 4, 5]]
>>> m_b = [[1, 2, 3], [4, 5]]
>>> lazy_matrix_mul(m_a, m_b)
Traceback (most recent call last):
    ...
ValueError: m_a and m_b can't be multiplied

# Test 4: Multiplying matrices with non-numeric elements (should raise TypeError)
>>> m_a = [['a', 2], [3, 4]]
>>> m_b = [[1, 2], [3, 'b']]
>>> lazy_matrix_mul(m_a, m_b)
Traceback (most recent call last):
    ...
TypeError: m_a should contain only integers or floats or m_b should contain only integers or floats

# Test 5: Multiplying incompatible matrices (should raise ValueError)
>>> m_a = [[1, 2, 3], [4, 5, 6]]
>>> m_b = [[1, 2], [3, 4]]
>>> lazy_matrix_mul(m_a, m_b)
Traceback (most recent call last):
    ...
ValueError: m_a and m_b can't be multiplied

# Test 6: Multiplying identity matrices (should return the same matrix)
>>> identity_matrix = [[1, 0], [0, 1]]
>>> m_a = [[2, 3], [4, 5]]
>>> lazy_matrix_mul(identity_matrix, m_a)
array([[2, 3],
       [4, 5]])

# Test 7: Multiplying matrices with all zero elements (should return a matrix with all zeros)
>>> zero_matrix = [[0, 0], [0, 0]]
>>> m_a = [[1, 2], [3, 4]]
>>> lazy_matrix_mul(zero_matrix, m_a)
array([[0, 0],
       [0, 0]])

# Test 8: Multiplying matrices with large numbers for numeric precision
>>> m_a = [[1e12, 2e12], [3e12, 4e12]]
>>> m_b = [[2e12, 3e12], [4e12, 5e12]]
>>> lazy_matrix_mul(m_a, m_b)
array([[1.0e+25, 1.3e+25],
       [2.2e+25, 2.9e+25]])

# Test 9: Multiplying matrices with one of them being a 1x1 matrix
>>> m_a = [[2]]
>>> m_b = [[3, 4]]
>>> lazy_matrix_mul(m_a, m_b)
array([[6, 8]])

# Test 10: Multiplying matrices with one of them being an identity matrix
>>> m_a = [[1, 2], [3, 4]]
>>> identity_matrix = [[1, 0], [0, 1]]
>>> lazy_matrix_mul(m_a, identity_matrix)
array([[1, 2],
       [3, 4]])

# Test 11: Multiplying matrices with one of them being a matrix of ones
>>> m_a = [[2, 2], [4, 4]]
>>> ones_matrix = [[1, 1], [1, 1]]
>>> lazy_matrix_mul(m_a, ones_matrix)
array([[4, 4],
       [8, 8]])
